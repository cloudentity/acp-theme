{{ define "login_scripts" }}

<script nonce="{{.Config.Nonce}}">

  document.addEventListener("DOMContentLoaded", function() {
    var url = new URL(window.location.href);
    var preview = url.searchParams.get("preview");
    if (preview === 'true') return;

    initSwitchers();
    initIdpDiscovery();
    initStaticIdpPage();

    document.addEventListener('click', delegate('button[role="tab"]', changeTab));
  });

  function changeTab() {
    var targetEl = event.targetSelector;
    var tab = targetEl.getAttribute('data-tabid');
    var signInDiv = document.querySelector('#sign-in');
    var quickAccessDiv = document.querySelector('#quick-access');
    var cancelButton = document.querySelector('#cancel');
    var tabs = document.querySelectorAll('button[role="tab"]');

    if (tab === "sign-in") {
      signInDiv.style.display = "block";
      cancelButton.style.display = "block";
      quickAccessDiv.style.display = "none";
      tabs[0].classList.add('tab-button-active');
      tabs[1].classList.remove('tab-button-active');
    }

    if (tab === "quick-access") {
      signInDiv.style.display = "none";
      quickAccessDiv.style.display = "block";
      tabs[0].classList.remove('tab-button-active');
      tabs[1].classList.add('tab-button-active');
      cancelButton.style.display = "none";
    }
  }

  function initSwitchers() {
    var switchContainers = document.querySelectorAll('.switch-container');
    switchContainers.forEach(function (switchContainer) {
      var input = switchContainer.querySelector('input');
      if (input) {
        switchContainer.addEventListener('keypress', function (e) {
          if (e.key === 'Enter') {
            var value = !input.checked;
            input.checked = value;
            input.setAttribute('data-checked', value);
          }
        });

        switchContainer.addEventListener('change', function (e) {
          input.setAttribute('data-checked', e.target.checked);
        });
      }
    });
  }

  function initStaticIdpPage() {
    var usernameInput = document.querySelector('#text-field-username-input');
    var passwordInput = document.querySelector('#text-field-password-input');
    var signInButton = document.querySelector('#sign-in-button');
    if (!usernameInput || !passwordInput || !signInButton) return;

    function disableSignInButtonOnEmptyInputsChange() {
      signInButton.disabled = !usernameInput.value || !passwordInput.value;
    }

    usernameInput.addEventListener('input', disableSignInButtonOnEmptyInputsChange);
    passwordInput.addEventListener('input', disableSignInButtonOnEmptyInputsChange);
  }

  function debounce(fn, delay) {
    var timeout;

    function debouncedFunction(username) {
      clearTimeout(timeout);
      timeout = setTimeout(function () {
        fn(username);
      }, delay);
    }

    function clear() {
      clearTimeout(timeout);
    }

    return {
      debouncedFunction: debouncedFunction,
      clear: clear,
    };
  }

  function initIdpDiscovery() {
    var form = document.querySelector('#sign-in-form');
    var idpsListHeader = document.querySelector('#idps-list-header');
    var idpsList = document.querySelector('#idps-list');
    var notYouButton = document.querySelector('#not-you-button');
    var usernameInput = document.querySelector('#text-field-username-input');
    var nextButton = document.querySelector('#sign-in-button');
    var idpsEmptyError = document.querySelector('#idps-empty-error');
    var idpsDiscoveryError = document.querySelector('#idps-discovery-error');

    if (!form || !idpsListHeader || !idpsList || !notYouButton || !usernameInput || !nextButton || !idpsEmptyError || !idpsDiscoveryError) return;

    var url = new URL(window.location.href);
    var loginHint = url.searchParams.get("login_hint");

    if (loginHint) {
      usernameInput.value = loginHint;
      searchIdps(loginHint);
    }

    var buttons = idpsList.querySelectorAll('button');

    function rerenderIdpsEmptyError() {
      idpsEmptyError.style.display = 'flex';
      buttons.forEach(function (button) {
        if (button.style.display !== 'none') {
          idpsEmptyError.style.display = 'none';
        }
      });
    }

    function rerenderHeader() {
      idpsListHeader.style.display = 'none';
      buttons.forEach(function (button) {
        if (button.style.display !== 'none') {
          idpsListHeader.style.display = 'block';
        }
      });
    }

    function rerenderButtons(visibleIdps) {
      buttons.forEach(function (button) {
        var id = button.getAttribute('value');
        button.style.display = visibleIdps.indexOf(id) === -1 ? 'none' : 'flex';
      });
      rerenderHeader();
      rerenderIdpsEmptyError();
    }

    function resetButtons() {
      buttons.forEach(function (button) {
        button.style.display = button.getAttribute('data-default-style-display');
      });
      rerenderHeader();
      idpsEmptyError.style.display = 'none';
    }

    function handleNextButtonState(username, isLoading) {
      var label = nextButton.firstElementChild;
      var loader = nextButton.lastElementChild;
      if (!label || !loader) return;

      notYouButton.style.display = !username || isLoading ? 'none' : 'block';
      usernameInput.disabled = !username || isLoading ? false : true;
      nextButton.style.display = !username || isLoading ? 'block' : 'none';
      nextButton.disabled = !username || isLoading ? true : false;

      label.style.display = isLoading ? "none" : "block";
      loader.style.display = isLoading ? "block" : "none";
    }

    function handleInstantRedirect(idps) {
      var loginForm = document.querySelector('#sign-in-form');
      var authenticationIdInput = document.querySelector('#idp-discovery-authentication-id');
      if (!loginForm || !authenticationIdInput) return;
      if (idps.length > 1) return false;

      var idpToRedirectTo = idps.find(function (idp) {
        return idp.instant_redirect;
      });

      if (idpToRedirectTo) {
        authenticationIdInput.value = idpToRedirectTo.id;
        loginForm.submit();
        return true;
      }

      return false;
    }

    function searchIdps(username) {
      if (!username) {
        handleNextButtonState('', false);
        resetButtons();
        return;
      }

      handleNextButtonState(username, true);
      fetch(window.location.pathname + "/discovery", {
        method: "POST",
        body: JSON.stringify({ identifier: username })
      })
      .then(function (response) {
        return response.json()
      })
      .then(function (data) {
        var idps = data && data.idps || [];
        var idpsIds = idps.map(function (idp) {
          return idp.id;
        })
        idpsDiscoveryError.style.display = 'none';

        var redirectTriggered = handleInstantRedirect(idps);
        if (!redirectTriggered) {
          rerenderButtons(idpsIds);
          handleNextButtonState(username, false);
        }
      })
      .catch(function (error) {
        console.error(error);
        idpsDiscoveryError.style.display = 'flex';
        resetButtons();
        handleNextButtonState(username, false);
      });
    }

    var result = debounce(searchIdps, 3000);
    var debouncedSearchIdps = result.debouncedFunction;
    var clearDebounce = result.clear;

    form.addEventListener('submit', function () {
      usernameInput.disabled = false;
    });

    usernameInput.addEventListener('keydown', function (e) {
      if (e.key === 'Enter') {
        e.preventDefault();
        clearDebounce();
        searchIdps(usernameInput.value);
      }
    });

    usernameInput.addEventListener('input', function (e) {
      nextButton.disabled = !e.target.value;
      debouncedSearchIdps(e.target.value);
    });

    nextButton.addEventListener('click', function () {
      clearDebounce();
      searchIdps(usernameInput.value);
    });

    notYouButton.addEventListener('click', function () {
      notYouButton.style.display = 'none';
      resetButtons();
      usernameInput.disabled = false;
      usernameInput.focus();
      nextButton.style.display = 'block';
      nextButton.disabled = false;
    });
  }

</script>

{{ end }}
